<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:view="view.*"
				autoDrawBackground="true"
				dataChange="dataChangeHandler(event)"
				>
	<fx:Script>
		<![CDATA[
			import controller.ItemRendererContainer;
			
			import model.Skill;
			import model.SummoningSpell;
			
			import mx.events.FlexEvent;
			
			import view.SkillListGroup;
			
			[Bindable] private var irc:ItemRendererContainer;
			[Bindable] private var skill:Skill;
			[Bindable] private var summon:SummoningSpell;
			[Bindable] private var context:String;
			
			protected function dataChangeHandler(event:FlexEvent):void
			{
				if( data != null) {
					irc = data as ItemRendererContainer;
					skill = irc.dataObject as Skill;
					context = irc.context;
					summon = skill as SummoningSpell;	// may be null
				}
			}
			
			protected function checkBox_changeHandler(event:Event):void
			{
				if( skill != null)
					skill.checked = event.currentTarget.selected;
			}
		]]>
	</fx:Script>

	<s:Rect left="0" right="0" top="0" bottom="0"
			radiusX="5" radiusY="5">
		<s:stroke>
			<s:SolidColorStroke color="{skill.complete ? 0x603937 : 0xff0000}"
								alpha="0.7"
								weight="{skill.complete ? 1 : 2}"
								/>
		</s:stroke>
	</s:Rect>

	<s:HGroup width="100%" verticalAlign="middle"
			  >
		<s:VGroup horizontalAlign="contentJustify"
				  paddingTop="5" paddingBottom="5" paddingLeft="10"
				  >
			<s:Label text="{skill.name}"
					 styleName="emphasisLabelStyle"
					 />
			<s:HGroup gap="10">
				<s:Label id="subtextL"
						 text="{skill.GetMessage()}"
						 styleName="subtextLabelStyle"
						 />
				<s:Label id="summonL"
						 includeInLayout="{summon != null}"
						 visible="{summon != null}"
						 text="{summon.GetSecondColumnMessage()}"
						 styleName="subtextLabelStyle"
						 />
			</s:HGroup>
		</s:VGroup>
		<s:Spacer width="100%"/>
		<s:CheckBox id="checkBox" width="32"
					visible="{context != 'GenerateCharacter'}"
					enabled="{context != 'GenerateCharacter'}"
					selected="{skill.checked}"
					change="checkBox_changeHandler(event)"
					/>
		<view:ListItemDeleteButton id="deleteB"
								   visible="{context != 'GenerateCharacter'}"
								   enabled="{context != 'GenerateCharacter'}"
								   objectToDelete="{skill}"
								   deleteF="{irc.genericF}"
								   />
	</s:HGroup>
</s:ItemRenderer>
